//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QCAstWebApplication.QCAstServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://qcsolutions.co.za/services/", ConfigurationName="QCAstServiceReference.IQCAstService")]
    public interface IQCAstService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetUserFromId", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetUserFromIdResponse")]
        QCAstSolution.Classes.User GetUserFromId(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/AuthenticateUser", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/AuthenticateUserResponse")]
        System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>> AuthenticateUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/NotifyWebmasterOfError", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/NotifyWebmasterOfErrorResponse")]
        void NotifyWebmasterOfError(string website, string page, string error);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetClientAndProfile", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetClientAndProfileResponse")]
        QCAstSolution.Classes.ClientProfile GetClientAndProfile(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetAllClients", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetAllClientsResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.Client> GetAllClients(string searchFormat, string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetAllUsersForClient", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetAllUsersForClientResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.User> GetAllUsersForClient(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/CheckForUnInvoicedRecords", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/CheckForUnInvoicedRecordsResponse" +
            "")]
        bool CheckForUnInvoicedRecords(string idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/DeleteUser", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/DeleteUserResponse")]
        bool DeleteUser(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/EditUser", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/EditUserResponse")]
        bool EditUser(int idUser, int idProfile, string username, string password, System.Nullable<int> clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/SaveUser", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/SaveUserResponse")]
        bool SaveUser(int idProfile, string username, string password, System.Nullable<int> clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/BillingsForGraph", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/BillingsForGraphResponse")]
        System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.List<object>>> BillingsForGraph(int currentMonth, int idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetClientFromUser", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetClientFromUserResponse")]
        QCAstSolution.Classes.Client GetClientFromUser(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetAllProfiles", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetAllProfilesResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.Profile> GetAllProfiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetAllUsers", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetAllUsersResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.User> GetAllUsers(string searchFormat, string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/CheckIfUserExists", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/CheckIfUserExistsResponse")]
        bool CheckIfUserExists(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetAllContactMethods", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetAllContactMethodsResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.PreferredContactMethod> GetAllContactMethods();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/CheckIfClientExists", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/CheckIfClientExistsResponse")]
        bool CheckIfClientExists(string accountingCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/AddClient", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/AddClientResponse")]
        bool AddClient(QCAstSolution.Classes.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetClientFromId", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetClientFromIdResponse")]
        QCAstSolution.Classes.Client GetClientFromId(int idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/EditClient", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/EditClientResponse")]
        bool EditClient(QCAstSolution.Classes.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/DeleteClient", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/DeleteClientResponse")]
        bool DeleteClient(int idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetInvoicesForClient", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetInvoicesForClientResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.Invoice> GetInvoicesForClient(int idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetBillingsForClient", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetBillingsForClientResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.Billing> GetBillingsForClient(int idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetUninvoicedDetailsForClient", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetUninvoicedDetailsForClientResp" +
            "onse")]
        System.Collections.Generic.List<QCAstSolution.Classes.InvoiceDetail> GetUninvoicedDetailsForClient(int idClient, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetInvoicedDetailsForClient", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetInvoicedDetailsForClientRespon" +
            "se")]
        System.Collections.Generic.List<QCAstSolution.Classes.InvoiceDetail> GetInvoicedDetailsForClient(int idClient, int invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetInvoicedSummaryForClient", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetInvoicedSummaryForClientRespon" +
            "se")]
        System.Collections.Generic.List<QCAstSolution.Classes.InvoiceSummary> GetInvoicedSummaryForClient(int idClient, int invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetUninvoicedSummaryForClient", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetUninvoicedSummaryForClientResp" +
            "onse")]
        System.Collections.Generic.List<QCAstSolution.Classes.InvoiceSummary> GetUninvoicedSummaryForClient(int idClient, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetTotalDuration", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetTotalDurationResponse")]
        string GetTotalDuration(int idClient, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetInvoiceDate", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetInvoiceDateResponse")]
        System.DateTime GetInvoiceDate(int idInvoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/CreateInvoice", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/CreateInvoiceResponse")]
        bool CreateInvoice(int idClient, System.DateTime endDate, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetAllReports", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetAllReportsResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.Report> GetAllReports();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetUndefinedDestinations", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetUndefinedDestinationsResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.Billing> GetUndefinedDestinations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetTop20ByDuration", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetTop20ByDurationResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.TopTwenty> GetTop20ByDuration(int clientId, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetTop20ByCost", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetTop20ByCostResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.TopTwenty> GetTop20ByCost(int idClient, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://qcsolutions.co.za/services/IQCAstService/GetSummaryByOrigin", ReplyAction="http://qcsolutions.co.za/services/IQCAstService/GetSummaryByOriginResponse")]
        System.Collections.Generic.List<QCAstSolution.Classes.Summary> GetSummaryByOrigin(int idClient);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQCAstServiceChannel : QCAstWebApplication.QCAstServiceReference.IQCAstService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QCAstServiceClient : System.ServiceModel.ClientBase<QCAstWebApplication.QCAstServiceReference.IQCAstService>, QCAstWebApplication.QCAstServiceReference.IQCAstService {
        
        public QCAstServiceClient() {
        }
        
        public QCAstServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QCAstServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QCAstServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QCAstServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public QCAstSolution.Classes.User GetUserFromId(int idUser) {
            return base.Channel.GetUserFromId(idUser);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>> AuthenticateUser(string username, string password) {
            return base.Channel.AuthenticateUser(username, password);
        }
        
        public void NotifyWebmasterOfError(string website, string page, string error) {
            base.Channel.NotifyWebmasterOfError(website, page, error);
        }
        
        public QCAstSolution.Classes.ClientProfile GetClientAndProfile(int idUser) {
            return base.Channel.GetClientAndProfile(idUser);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.Client> GetAllClients(string searchFormat, string searchString) {
            return base.Channel.GetAllClients(searchFormat, searchString);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.User> GetAllUsersForClient(int idUser) {
            return base.Channel.GetAllUsersForClient(idUser);
        }
        
        public bool CheckForUnInvoicedRecords(string idUser) {
            return base.Channel.CheckForUnInvoicedRecords(idUser);
        }
        
        public bool DeleteUser(int idUser) {
            return base.Channel.DeleteUser(idUser);
        }
        
        public bool EditUser(int idUser, int idProfile, string username, string password, System.Nullable<int> clientId) {
            return base.Channel.EditUser(idUser, idProfile, username, password, clientId);
        }
        
        public bool SaveUser(int idProfile, string username, string password, System.Nullable<int> clientId) {
            return base.Channel.SaveUser(idProfile, username, password, clientId);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.List<object>>> BillingsForGraph(int currentMonth, int idClient) {
            return base.Channel.BillingsForGraph(currentMonth, idClient);
        }
        
        public QCAstSolution.Classes.Client GetClientFromUser(int idUser) {
            return base.Channel.GetClientFromUser(idUser);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.Profile> GetAllProfiles() {
            return base.Channel.GetAllProfiles();
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.User> GetAllUsers(string searchFormat, string searchString) {
            return base.Channel.GetAllUsers(searchFormat, searchString);
        }
        
        public bool CheckIfUserExists(string username) {
            return base.Channel.CheckIfUserExists(username);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.PreferredContactMethod> GetAllContactMethods() {
            return base.Channel.GetAllContactMethods();
        }
        
        public bool CheckIfClientExists(string accountingCode) {
            return base.Channel.CheckIfClientExists(accountingCode);
        }
        
        public bool AddClient(QCAstSolution.Classes.Client client) {
            return base.Channel.AddClient(client);
        }
        
        public QCAstSolution.Classes.Client GetClientFromId(int idClient) {
            return base.Channel.GetClientFromId(idClient);
        }
        
        public bool EditClient(QCAstSolution.Classes.Client client) {
            return base.Channel.EditClient(client);
        }
        
        public bool DeleteClient(int idClient) {
            return base.Channel.DeleteClient(idClient);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.Invoice> GetInvoicesForClient(int idClient) {
            return base.Channel.GetInvoicesForClient(idClient);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.Billing> GetBillingsForClient(int idClient) {
            return base.Channel.GetBillingsForClient(idClient);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.InvoiceDetail> GetUninvoicedDetailsForClient(int idClient, System.DateTime endDate) {
            return base.Channel.GetUninvoicedDetailsForClient(idClient, endDate);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.InvoiceDetail> GetInvoicedDetailsForClient(int idClient, int invoiceId) {
            return base.Channel.GetInvoicedDetailsForClient(idClient, invoiceId);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.InvoiceSummary> GetInvoicedSummaryForClient(int idClient, int invoiceId) {
            return base.Channel.GetInvoicedSummaryForClient(idClient, invoiceId);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.InvoiceSummary> GetUninvoicedSummaryForClient(int idClient, System.DateTime endDate) {
            return base.Channel.GetUninvoicedSummaryForClient(idClient, endDate);
        }
        
        public string GetTotalDuration(int idClient, System.DateTime endDate) {
            return base.Channel.GetTotalDuration(idClient, endDate);
        }
        
        public System.DateTime GetInvoiceDate(int idInvoice) {
            return base.Channel.GetInvoiceDate(idInvoice);
        }
        
        public bool CreateInvoice(int idClient, System.DateTime endDate, int idUser) {
            return base.Channel.CreateInvoice(idClient, endDate, idUser);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.Report> GetAllReports() {
            return base.Channel.GetAllReports();
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.Billing> GetUndefinedDestinations() {
            return base.Channel.GetUndefinedDestinations();
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.TopTwenty> GetTop20ByDuration(int clientId, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTop20ByDuration(clientId, startDate, endDate);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.TopTwenty> GetTop20ByCost(int idClient, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTop20ByCost(idClient, startDate, endDate);
        }
        
        public System.Collections.Generic.List<QCAstSolution.Classes.Summary> GetSummaryByOrigin(int idClient) {
            return base.Channel.GetSummaryByOrigin(idClient);
        }
    }
}
